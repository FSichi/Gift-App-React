{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMYO,UAAU,YAAxC,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SApBc,SAACR,GAEvBF,EAAcE,EAAES,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKR,UAAW,2CAAhB,UACI,qBAAKwB,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCJHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAEHC,YAAY,WACRJ,EAAS,CACLhB,KAAMmB,EACNL,SAAQ,MAEb,UAKb,CAACrB,IAIIsB,EDtBwBM,CAAc5B,GAAjCa,EAAZ,EAAON,KAAac,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAI3B,UAAU,iDAAd,SAAgEM,IAChE,oBAAIN,UAAU,QAEb2B,GAAW,mBAAG3B,UAAY,mCAAf,uBAEZ,qBAAKA,UAAU,WAAf,SAGQmB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,SAOzB,oBAAIjB,UAAU,YExBbmC,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAGA,OACI,gCACI,oBAAIU,UAAU,YAAd,0BACA,cAAC,EAAD,CAAaV,cAAgBA,IAC7B,oBAAIU,UAAU,SAEd,6BAEQoC,EAAWrB,KAAK,SAAAsB,GAAS,OACrB,cAAC,EAAD,CAEI/B,SAAY+B,GADLA,Y,MCXnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0899004a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit} className=\"formStyle\">\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>   \r\n    );\r\n}\r\n\r\n\r\n//SOLICITAR USO DE PROPS\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n    \r\n    /* const url = 'https://api.giphy.com/v1/gifs/search?q=Messi&limit=10&api_key=m7LPtdj24l7Nw65crEJreKpT6zZDC1un'; */\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=m7LPtdj24l7Nw65crEJreKpT6zZDC1un`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    console.log(id, title, url);\r\n    \r\n    return (\r\n        <div className ='card animate__animated animate__bounceIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs( category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"titleCat animate__animated animate__rubberBand\">{category}</h3>\r\n            <hr className=\"sep\"/>\r\n\r\n            {loading && <p className = \"animate__animated animate__flash\">Loading..</p>}\r\n\r\n            <div className=\"cardGrid\">\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n            <hr className=\"sep\"/>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading:false\r\n                    })\r\n                }, 200);\r\n            \r\n            });\r\n\r\n\r\n    },[category] );\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"titleGnrl\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr className=\"sepG\"/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( categorie => (\r\n                        <GifGrid \r\n                            key = {categorie}\r\n                            category = {categorie} \r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}